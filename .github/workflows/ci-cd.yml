name: Deploy FastAPI to AWS EC2

on:
  push:
    branches: [ main ]

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings  
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Validate FastAPI app
      run: |
        # Check if the app can be imported without errors
        python -c "from main import app; print('✅ FastAPI app imported successfully')"

  deploy:
    needs: lint-and-validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Navigate to home directory first
          cd /home/ec2-user
          
          # Navigate to application directory
          cd fastapi-app || { echo "Directory not found, creating..."; mkdir -p fastapi-app; cd fastapi-app; }
          
          # Stop existing application
          sudo pkill -f "python.*main.py" || echo "No existing process found"
          sudo pkill -f "uvicorn.*main:app" || echo "No existing uvicorn process found"
          
          # Update system packages
          sudo yum update -y
          
          # Install Python 3.11+ if not installed
          python3 --version || sudo yum install python3 python3-pip -y
          
          # Clone or pull latest code
          if [ -d ".git" ]; then
            echo "Git repository found, updating..."
            git pull origin main
          else
            echo "Cloning repository..."
            git clone https://github.com/0mer-Ashraf-ML/fastapi-sample .
          fi
          
          # Create virtual environment if it doesn't exist
          if [ ! -d "venv" ]; then
            echo "Creating virtual environment..."
            python3 -m venv venv
          fi
          
          # Activate virtual environment and install dependencies
          echo "Installing dependencies..."
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Set environment variables
          export PORT=8080
          export PYTHONPATH=/home/ec2-user/fastapi-app
          
          # Start the application with nohup (runs in background)
          echo "Starting FastAPI application..."
          nohup python3 -m uvicorn main:app --host 0.0.0.0 --port 8080 --reload > app.log 2>&1 &
          
          # Wait a moment and check if app started successfully
          sleep 10
          if pgrep -f "uvicorn.*main:app"; then
            echo "✅ FastAPI application started successfully!"
            # Test if application is responding
            curl -f http://localhost:8080/health && echo "✅ Health check passed" || echo "❌ Health check failed"
          else
            echo "❌ Failed to start FastAPI application"
            echo "Checking logs..."
            cat app.log
            exit 1
          fi
          
          # Display running processes
          echo "Current running processes:"
          ps aux | grep uvicorn | grep -v grep || echo "No uvicorn processes found"